<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://camel.apache.org/schema/spring
    http://camel.apache.org/schema/spring/camel-spring.xsd">

    <!-- Doesn't use SessionManagedDao interface for table creation -->
    <bean id="ddRetrievalDatabaseProperties" class="com.raytheon.uf.edex.database.DatabasePluginProperties">
        <property name="pluginFQN" value="com.raytheon.uf.edex.datadelivery.retrieval" />
        <property name="database" value="metadata" />
    </bean>

    <bean factory-bean="dbPluginRegistry" factory-method="register">
        <constructor-arg value="com.raytheon.uf.edex.datadelivery.retrieval" />
        <constructor-arg ref="ddRetrievalDatabaseProperties" />
    </bean>

    <bean id="serviceFactoryRegistry"
        class="com.raytheon.uf.edex.datadelivery.retrieval.metadata.ServiceTypeFactory"
        factory-method="getServiceTypeRegistry" />

    <bean id="metadataAdapterRegistry"
        class="com.raytheon.uf.edex.datadelivery.retrieval.metadata.adapters.AbstractMetadataAdapter"
        factory-method="getMetadataAdapterRegistry" />

    <!-- Register service factories -->
    <bean factory-bean="serviceFactoryRegistry" factory-method="register">
        <constructor-arg value="OPENDAP" />
        <constructor-arg
            value="com.raytheon.uf.edex.datadelivery.retrieval.opendap.OpenDapServiceFactory"
            type="java.lang.Class" />
    </bean>

    <!-- End service factories -->

    <bean id="subNotifyTask"
        class="com.raytheon.uf.edex.datadelivery.retrieval.handlers.SubscriptionNotifyTask">
        <constructor-arg ref="retrievalDao" />
    </bean>

    <bean id="scheduledExecutorService" class="java.util.concurrent.Executors"
        factory-method="newScheduledThreadPool">
        <constructor-arg value="${retrieval-subNotify.threads}" />
    </bean>

    <bean id="retrievalHandler"
        class="com.raytheon.uf.edex.datadelivery.retrieval.handlers.RetrievalHandler">
        <constructor-arg ref="scheduledExecutorService" />
        <constructor-arg ref="retrievalDao" />
        <constructor-arg ref="subNotifyTask" />
        <!-- How often to execute the subscription notify tasks -->
        <constructor-arg>
            <bean class="com.raytheon.uf.common.time.domain.Durations"
                factory-method="fromString">
                <constructor-arg value="${subnotify.task.frequency}" />
            </bean>
        </constructor-arg>
        <constructor-arg value="${retrieval-process.threads}"/>
        <constructor-arg ref="retrievalTask" />
    </bean>

    <!--  async retrievals run through this processor. -->
    <bean id="asyncRetrievalProcessor" class="com.raytheon.uf.edex.datadelivery.retrieval.handlers.AsyncRetrievalProcessor">
        <constructor-arg ref="retrievalDao" />
    </bean>

    <camelContext id="dataDeliveryNotify-camel" xmlns="http://camel.apache.org/schema/spring" errorHandlerRef="errorHandler">

       <!-- Asynchronous retrieval queue -->
        <endpoint id="asyncRetrievalQueue" uri="jms-durable:queue:asyncRetrievalQueue?concurrentConsumers=1" />

        <!-- event bus messages -->
        <route id="dataDeliveryNotify">
            <from uri="direct-vm:dataDeliveryNotify" />
            <to uri="direct-vm:stageNotification" />
        </route>
       
        <!-- Processes the Async Retrievals harvested by any handlers -->
        <route id="asyncRetrievalProcess">
            <from uri="asyncRetrievalQueue" />
            <doTry>
                <pipeline>
                    <bean ref="asyncRetrievalProcessor" method="processRetrieval" />
                </pipeline>
                <doCatch>
                    <exception>java.lang.Throwable</exception>
                    <to uri="log:asyncRetrievalProcessor?level=ERROR" />
                </doCatch>
            </doTry>
        </route>
    </camelContext>

</beans>